<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--指定命名空间-->
<mapper namespace="so.dao.EmpDao">
    <resultMap id="empMap" type="so.domain.Emp">
<!--        id设置主键,property为别名,column为数据库中数据-->
        <id property="empid" column="id"></id>
<!--            result设置非主键-->
        <result property="empname" column="username"></result>
        <result property="empsex" column="sex"></result>
        <result property="empadd" column="address"></result>
    </resultMap>




    <select id="findAll" resultMap="empMap">
        select * from emp
    </select>

    <select id="findById" parameterType="java.lang.Integer" resultType="emp">
--     别名可以使之对应
        select username as name,address from emp where id = #{id}
    </select>

    <delete id="delete" parameterType="java.lang.Integer" >
        delete from emp where id = #{id}
    </delete>
    <insert id="save"  parameterType="emp">
<!--                 配置保存时获取插入id keyColumn数据库中的列名 keyProperty实体类     不写时无法返回-->
        <selectKey keyColumn="id" keyProperty="id" resultType="int">
            select  last_insert_id();
        </selectKey>
        insert into emp(username,sex,address) values(#{name},#{sex},#{address})
    </insert>
    <update id="update" parameterType="emp">
        update emp set address=#{address} where id=${id}
    </update>

    <select id="findByName" parameterType="java.lang.String"  resultType="emp">
        select * from emp where username like '%${value}%'
    </select>
</mapper>